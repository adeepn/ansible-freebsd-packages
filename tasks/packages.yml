---
# TODO: Implement pkgng annotation.
# TODO: loop_control label

# INSTALL

# Individualy from dictionary
- name: "packages: Debug list packages individualy from lists in the dictionary"
  when: pkg_debug|bool and pkg_install_individually|bool
  debug:
    msg: "{{ item.0 }}: {{ item.1 }}"
  loop: "{{ lookup('subelements', pkg_dict, 'packages') }}"

- name: "packages: Install packages individualy from lists in the dictionary"
  when: pkg_install_individually|bool and (not pkg_dryrun|bool)
  pkgng:
    name: "{{ item.1 }}"
    autoremove: "{{ pkg_autoremove | default(omit) }}"
    cached: "{{ pkg_cached|default(omit) }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_pkgsite|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  loop: "{{ lookup('subelements', pkg_dict, 'packages') }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"

# List from dictionary
- name: "packages: Debug lists of packages from the dictionary"
  when: pkg_debug|bool and (not pkg_install_individually|bool)
  debug:
    msg: "{{ item }}"
  loop: "{{ pkg_dict|json_query('[].packages') }}"

- name: "packages: Install lists of packages from the dictionary"
  when: (not pkg_install_individually|bool) and (not pkg_dryrun|bool)
  pkgng:
    name: "{{ item }}"
    autoremove: "{{ pkg_autoremove|default(omit) }}"
    cached: "{{ pkg_cached|default(omit) }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_pkgsite|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  loop: "{{ pkg_dict|json_query('[].packages') }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"

# Individualy from list
- name: "packages: Install packages individualy from the list"
  when: pkg_install_individually|bool and (not pkg_dryrun|bool)
  pkgng:
    name: "{{ item }}"
    autoremove: "{{ pkg_autoremove }}"
    cached: "{{ pkg_cached }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_site|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  loop: "{{ pkg_list }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"

# List
- name: "packages: Install list of packages"
  when: (not pkg_install_individually|bool) and (not pkg_dryrun|bool)
  pkgng:
    name: "{{ pkg_list }}"
    autoremove: "{{ pkg_autoremove }}"
    cached: "{{ pkg_cached }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_site|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"

# DEINSTALL

- name: "packages: Deinstall packages individually from the list"
  when: pkg_install_individually|bool and (not pkg_dryrun|bool)
  pkgng:
    state: absent
    name: "{{ item }}"
    autoremove: "{{ pkg_autoremove }}"
    cached: "{{ pkg_cached }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_site|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  loop: "{{ pkg_list_deinstall }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"

- name: "packages: Deinstall list of packages"
  when: (not pkg_install_individually|bool) and (not pkg_dryrun|bool)
  pkgng:
    state: absent
    name: "{{ pkg_list_deinstall }}"
    autoremove: "{{ pkg_autoremove }}"
    cached: "{{ pkg_cached }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_site|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"

# EOF
...
